import React, { useState } from "react";
import { type NextPage } from "next";
import Head from "next/head";
import { signIn, signOut, useSession } from "next-auth/react";
import { api } from "~/utils/api";
import Form from "~/lib/Form";
import { useForm } from "react-hook-form";

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();
  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: !!sessionData }
  );
  const [loading, setLoading] = useState(false);

  const methods = useForm({
    defaultValues: {
      email: "",
      password: "",
    },
  });

  return (
    <Form
      methods={methods}
      onSubmit={async (data) => {
        setLoading(true);
        sessionData
          ? await signOut()
          : await signIn("credentials", { ...data, redirect: false })
              .then((res) => {
                console.log("res", res);
              })
              .catch((err) => {
                console.log("err", err);
              })
              .finally(() => {
                setLoading(false);
              });
      }}
      className="flex flex-col items-center justify-center gap-4"
    >
      <Form.Input
        label="Email"
        className="bg"
        path="email"
        placeholder="Enter your email"
      />
      <Form.Input
        label="Password"
        type="password"
        className="test"
        placeholder="Enter your password"
        path="password"
      />

      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        disabled={loading}
        type="submit"
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </Form>
  );
};

const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: "from Oh my dog" });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            OH my dog
          </h1>
          <div className="flex flex-col items-center gap-2">
            <p className="text-2xl text-white">
              {hello.data ? hello.data.greeting : "Loading tRPC query..."}
            </p>
            <AuthShowcase />
          </div>
        </div>
      </div>
    </>
  );
};

export default Home;
